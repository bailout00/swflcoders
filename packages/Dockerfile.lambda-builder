FROM public.ecr.aws/amazonlinux/amazonlinux:2023

# Install build dependencies
RUN yum update -y && \
    yum install -y gcc gcc-c++ openssl-devel pkgconfig zip tar gzip && \
    yum clean all

# Install Rust
RUN curl --proto "=https" --tlsv1.2 -sSf https://sh.rustup.rs | sh -s -- -y
ENV PATH="/root/.cargo/bin:${PATH}"

# Add ARM64 target
RUN rustup target add aarch64-unknown-linux-gnu

# Set working directory
WORKDIR /workspace

# Copy package structure (from packages/ context)
COPY backend/Cargo.toml backend/Cargo.lock ./backend/
COPY backend/src ./backend/src/
COPY types ./types/

# Change to backend directory for build
WORKDIR /workspace/backend

# Build all binaries
RUN cargo build --release --target aarch64-unknown-linux-gnu

# Create lambda directory structure and organize binaries
RUN mkdir -p target/lambda && \
    for binary in $(grep -A 1 '^\[\[bin\]\]' Cargo.toml | grep '^name = ' | sed 's/name = "\(.*\)"/\1/' | tr -d '"'); do \
        mkdir -p "target/lambda/$binary" && \
        cp "target/aarch64-unknown-linux-gnu/release/$binary" "target/lambda/$binary/bootstrap" && \
        chmod +x "target/lambda/$binary/bootstrap" && \
        echo "Built $binary -> target/lambda/$binary/bootstrap"; \
    done

CMD ["ls", "-la", "target/lambda/"]
